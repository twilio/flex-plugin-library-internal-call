<?xml version="1.0" encoding="UTF-8"?>
<testsuites name="jest tests" tests="83" failures="0" errors="0" time="25.359">
  <testsuite name="HoldCall Action" errors="0" failures="0" skipped="0" timestamp="2023-02-10T06:45:14" time="2.437" tests="4">
    <testcase classname="HoldCall Action adds beforeAcceptTask listener" name="HoldCall Action adds beforeAcceptTask listener" time="0.002">
    </testcase>
    <testcase classname="HoldCall Action should call InternalCallService.acceptInternalTask with correct parameters" name="HoldCall Action should call InternalCallService.acceptInternalTask with correct parameters" time="0.001">
    </testcase>
    <testcase classname="HoldCall Action should not call InternalCallService.acceptInternalTask as it is not an internal call" name="HoldCall Action should not call InternalCallService.acceptInternalTask as it is not an internal call" time="0.001">
    </testcase>
    <testcase classname="HoldCall Action should not call InternalCallService.acceptInternalTask with incorrect participantType" name="HoldCall Action should not call InternalCallService.acceptInternalTask with incorrect participantType" time="0">
    </testcase>
  </testsuite>
  <testsuite name="holdParticipant" errors="0" failures="0" skipped="0" timestamp="2023-02-10T06:45:14" time="2.666" tests="8">
    <testcase classname="holdParticipant adds participant to the conference successfully" name="holdParticipant adds participant to the conference successfully" time="0.003">
    </testcase>
    <testcase classname="holdParticipant throws error when trying to add a participant to the conference" name="holdParticipant throws error when trying to add a participant to the conference" time="0.001">
    </testcase>
    <testcase classname="unholdParticipant adds participant to the conference successfully" name="unholdParticipant adds participant to the conference successfully" time="0.001">
    </testcase>
    <testcase classname="unholdParticipant throws error when trying to add a participant to the conference" name="unholdParticipant throws error when trying to add a participant to the conference" time="0">
    </testcase>
    <testcase classname="rejectInternalTask rejects an internal task successfully" name="rejectInternalTask rejects an internal task successfully" time="0.001">
    </testcase>
    <testcase classname="rejectInternalTask throws error when trying to add a participant to the conference" name="rejectInternalTask throws error when trying to add a participant to the conference" time="0">
    </testcase>
    <testcase classname="acceptInternalTask rejects an internal task with conference successfully" name="acceptInternalTask rejects an internal task with conference successfully" time="0.001">
    </testcase>
    <testcase classname="acceptInternalTask rejects an internal task without conference successfully" name="acceptInternalTask rejects an internal task without conference successfully" time="0">
    </testcase>
  </testsuite>
  <testsuite name="utils/common/ApiService" errors="0" failures="0" skipped="0" timestamp="2023-02-10T06:45:14" time="3.053" tests="5">
    <testcase classname="utils/common/ApiService should provide access to the Flex Manager instance" name="utils/common/ApiService should provide access to the Flex Manager instance" time="0.001">
    </testcase>
    <testcase classname="utils/common/ApiService should build encoded params into a string to use as the body for serverless reqeusts" name="utils/common/ApiService should build encoded params into a string to use as the body for serverless reqeusts" time="0">
    </testcase>
    <testcase classname="utils/common/ApiService fetchJsonWithReject should return json response" name="utils/common/ApiService fetchJsonWithReject should return json response" time="0.002">
    </testcase>
    <testcase classname="utils/common/ApiService fetchJsonWithReject should throw error" name="utils/common/ApiService fetchJsonWithReject should throw error" time="0.001">
    </testcase>
    <testcase classname="utils/common/ApiService fetchJsonWithReject should retry on error" name="utils/common/ApiService fetchJsonWithReject should retry on error" time="0.395">
    </testcase>
  </testsuite>
  <testsuite name="Prepare Flex Function" errors="0" failures="0" skipped="0" timestamp="2023-02-10T06:45:14" time="3.163" tests="4">
    <testcase classname="Prepare Flex Function prepareFlexFunction is called successfully " name="Prepare Flex Function prepareFlexFunction is called successfully " time="0.082">
    </testcase>
    <testcase classname="Prepare Function prepareFlexFunction is called successfully " name="Prepare Function prepareFlexFunction is called successfully " time="0.001">
    </testcase>
    <testcase classname="Prepare Function prepareFlexFunction returns error 400" name="Prepare Function prepareFlexFunction returns error 400" time="0">
    </testcase>
    <testcase classname="Prepare Function prepareFlexFunction error handler" name="Prepare Function prepareFlexFunction error handler" time="0">
    </testcase>
  </testsuite>
  <testsuite name="Call Outbound Join" errors="0" failures="0" skipped="0" timestamp="2023-02-10T06:45:14" time="3.261" tests="2">
    <testcase classname="Call Outbound Join join participant successfully" name="Call Outbound Join join participant successfully" time="0.188">
    </testcase>
    <testcase classname="Call Outbound Join end conference successfully" name="Call Outbound Join end conference successfully" time="0.002">
    </testcase>
  </testsuite>
  <testsuite name="holdParticipant tests from ConferenceParticipant" errors="0" failures="0" skipped="0" timestamp="2023-02-10T06:45:14" time="3.356" tests="11">
    <testcase classname="holdParticipant tests from ConferenceParticipant holdParticipant returns success response" name="holdParticipant tests from ConferenceParticipant holdParticipant returns success response" time="0.274">
    </testcase>
    <testcase classname="holdParticipant tests from ConferenceParticipant holdParticipant throws invalid parameters object passed" name="holdParticipant tests from ConferenceParticipant holdParticipant throws invalid parameters object passed" time="0.001">
    </testcase>
    <testcase classname="holdParticipant tests from ConferenceParticipant holdParticipant throws invalid parameters object passed" name="holdParticipant tests from ConferenceParticipant holdParticipant throws invalid parameters object passed" time="0">
    </testcase>
    <testcase classname="holdParticipant tests from ConferenceParticipant holdParticipant throws invalid parameters object passed" name="holdParticipant tests from ConferenceParticipant holdParticipant throws invalid parameters object passed" time="0">
    </testcase>
    <testcase classname="holdParticipant tests from ConferenceParticipant holdParticipant throws invalid parameters object passed" name="holdParticipant tests from ConferenceParticipant holdParticipant throws invalid parameters object passed" time="0.001">
    </testcase>
    <testcase classname="updateParticipant tests from ConferenceParticipant updateParticipant returns success response" name="updateParticipant tests from ConferenceParticipant updateParticipant returns success response" time="0">
    </testcase>
    <testcase classname="updateParticipant tests from ConferenceParticipant updateParticipant throws invalid parameters object passed" name="updateParticipant tests from ConferenceParticipant updateParticipant throws invalid parameters object passed" time="0.001">
    </testcase>
    <testcase classname="updateParticipant tests from ConferenceParticipant updateParticipant throws invalid parameters object passed" name="updateParticipant tests from ConferenceParticipant updateParticipant throws invalid parameters object passed" time="0">
    </testcase>
    <testcase classname="updateParticipant tests from ConferenceParticipant updateParticipant throws invalid parameters object passed" name="updateParticipant tests from ConferenceParticipant updateParticipant throws invalid parameters object passed" time="0">
    </testcase>
    <testcase classname="updateParticipant tests from ConferenceParticipant updateParticipant throws invalid parameters object passed" name="updateParticipant tests from ConferenceParticipant updateParticipant throws invalid parameters object passed" time="0">
    </testcase>
    <testcase classname="fetchByTask tests from ConferenceParticipant fetchByTask is called successfully" name="fetchByTask tests from ConferenceParticipant fetchByTask is called successfully" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="taskrouter.createTask" errors="0" failures="0" skipped="0" timestamp="2023-02-10T06:45:14" time="3.645" tests="16">
    <testcase classname="taskrouter.createTask createTask gives success" name="taskrouter.createTask createTask gives success" time="0.198">
    </testcase>
    <testcase classname="taskrouter.createTask createTask gives error due to invalid taskChannel" name="taskrouter.createTask createTask gives error due to invalid taskChannel" time="0">
    </testcase>
    <testcase classname="taskrouter.createTask createTask gives error due to invalid attributes" name="taskrouter.createTask createTask gives error due to invalid attributes" time="0.003">
    </testcase>
    <testcase classname="taskrouter.fetchTask fetchTask gives success" name="taskrouter.fetchTask fetchTask gives success" time="0.001">
    </testcase>
    <testcase classname="taskrouter.fetchTask fetchTask gives error due to invalid attempts" name="taskrouter.fetchTask fetchTask gives error due to invalid attempts" time="0">
    </testcase>
    <testcase classname="taskrouter.fetchTask fetchTask gives error due to invalid taskSid" name="taskrouter.fetchTask fetchTask gives error due to invalid taskSid" time="0.001">
    </testcase>
    <testcase classname="taskrouter.fetchTask fetchTask gives error due to invalid context" name="taskrouter.fetchTask fetchTask gives error due to invalid context" time="0">
    </testcase>
    <testcase classname="taskrouter.updateTaskAttributes updateTaskAttributes gives success" name="taskrouter.updateTaskAttributes updateTaskAttributes gives success" time="0.002">
    </testcase>
    <testcase classname="taskrouter.updateTaskAttributes updateTaskAttributes gives error due to invalid attempts" name="taskrouter.updateTaskAttributes updateTaskAttributes gives error due to invalid attempts" time="0">
    </testcase>
    <testcase classname="taskrouter.updateTaskAttributes updateTaskAttributes gives error due to invalid taskSid" name="taskrouter.updateTaskAttributes updateTaskAttributes gives error due to invalid taskSid" time="0">
    </testcase>
    <testcase classname="taskrouter.updateTaskAttributes updateTaskAttributes gives error due to invalid attributesUpdate" name="taskrouter.updateTaskAttributes updateTaskAttributes gives error due to invalid attributesUpdate" time="0">
    </testcase>
    <testcase classname="taskrouter.updateTask updateTask gives success" name="taskrouter.updateTask updateTask gives success" time="0.001">
    </testcase>
    <testcase classname="taskrouter.updateTask updateTask gives error due to invalid attempts" name="taskrouter.updateTask updateTask gives error due to invalid attempts" time="0">
    </testcase>
    <testcase classname="taskrouter.updateTask updateTask gives error due to invalid taskSid" name="taskrouter.updateTask updateTask gives error due to invalid taskSid" time="0">
    </testcase>
    <testcase classname="taskrouter.updateTask updateTask gives error due to invalid updateParams" name="taskrouter.updateTask updateTask gives error due to invalid updateParams" time="0">
    </testcase>
    <testcase classname="taskrouter.updateTask updateTask gives error due to invalid context" name="taskrouter.updateTask updateTask gives error due to invalid context" time="0">
    </testcase>
  </testsuite>
  <testsuite name="a completed conference" errors="0" failures="0" skipped="0" timestamp="2023-02-10T06:45:17" time="1.002" tests="2">
    <testcase classname="a completed conference returns a VoiceResponse" name="a completed conference returns a VoiceResponse" time="0.014">
    </testcase>
    <testcase classname="a completed conference returns a twiml call" name="a completed conference returns a twiml call" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="Remove Participant" errors="0" failures="0" skipped="0" timestamp="2023-02-10T06:45:17" time="0.658" tests="1">
    <testcase classname="Remove Participant CleanUpTask is called successfully " name="Remove Participant CleanUpTask is called successfully " time="0.072">
    </testcase>
  </testsuite>
  <testsuite name="internal call" errors="0" failures="0" skipped="0" timestamp="2023-02-10T06:45:18" time="0.489" tests="1">
    <testcase classname="internal call makes an internal call" name="internal call makes an internal call" time="0.002">
    </testcase>
  </testsuite>
  <testsuite name="HoldCall Action" errors="0" failures="0" skipped="0" timestamp="2023-02-10T06:45:17" time="0.631" tests="4">
    <testcase classname="HoldCall Action adds beforeHoldParticipant listener" name="HoldCall Action adds beforeHoldParticipant listener" time="0.002">
    </testcase>
    <testcase classname="HoldCall Action should not call InternalCallService.holdParticipant as it is not an internal call" name="HoldCall Action should not call InternalCallService.holdParticipant as it is not an internal call" time="0.002">
    </testcase>
    <testcase classname="HoldCall Action should call InternalCallService.holdParticipant with correct parameters" name="HoldCall Action should call InternalCallService.holdParticipant with correct parameters" time="0.001">
    </testcase>
    <testcase classname="HoldCall Action should not call InternalCallService.holdParticipant with incorrect participantType" name="HoldCall Action should not call InternalCallService.holdParticipant with incorrect participantType" time="0">
    </testcase>
  </testsuite>
  <testsuite name="HoldCall Action" errors="0" failures="0" skipped="0" timestamp="2023-02-10T06:45:18" time="0.437" tests="4">
    <testcase classname="HoldCall Action adds beforeRejectTask listener" name="HoldCall Action adds beforeRejectTask listener" time="0.002">
    </testcase>
    <testcase classname="HoldCall Action should not call InternalCallService.rejectInternalTask as it is not an internal call" name="HoldCall Action should not call InternalCallService.rejectInternalTask as it is not an internal call" time="0.001">
    </testcase>
    <testcase classname="HoldCall Action should call InternalCallService.rejectInternalTask with correct parameters" name="HoldCall Action should call InternalCallService.rejectInternalTask with correct parameters" time="0">
    </testcase>
    <testcase classname="HoldCall Action should not call InternalCallService.rejectInternalTask with incorrect participantType" name="HoldCall Action should not call InternalCallService.rejectInternalTask with incorrect participantType" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="a completed conference" errors="0" failures="0" skipped="0" timestamp="2023-02-10T06:45:18" time="0.481" tests="2">
    <testcase classname="a completed conference returns a VoiceResponse" name="a completed conference returns a VoiceResponse" time="0.027">
    </testcase>
    <testcase classname="a completed conference returns a twiml call" name="a completed conference returns a twiml call" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="CallCanvas" errors="0" failures="0" skipped="0" timestamp="2023-02-10T06:45:18" time="0.373" tests="1">
    <testcase classname="CallCanvas removes directory from call canvas" name="CallCanvas removes directory from call canvas" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="Hold Participant" errors="0" failures="0" skipped="0" timestamp="2023-02-10T06:45:17" time="1.19" tests="2">
    <testcase classname="Hold Participant holdParticipant is called successfully " name="Hold Participant holdParticipant is called successfully " time="0.072">
    </testcase>
    <testcase classname="Hold Participant holdParticipant thorws error" name="Hold Participant holdParticipant thorws error" time="0">
    </testcase>
  </testsuite>
  <testsuite name="InternalCall notification" errors="0" failures="0" skipped="0" timestamp="2023-02-10T06:45:18" time="0.451" tests="2">
    <testcase classname="InternalCall notification adds beforeAddNotification listener" name="InternalCall notification adds beforeAddNotification listener" time="0.001">
    </testcase>
    <testcase classname="InternalCall notification should call beforeAddNotification listener" name="InternalCall notification should call beforeAddNotification listener" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="undefined" errors="0" failures="0" skipped="0" timestamp="2023-02-10T06:45:18" time="0.331" tests="5">
    <testcase classname=" parameterValitor returns success with strings" name=" parameterValitor returns success with strings" time="0.001">
    </testcase>
    <testcase classname=" parameterValitor returns success with object" name=" parameterValitor returns success with object" time="0">
    </testcase>
    <testcase classname=" parameterValitor returns error with strings" name=" parameterValitor returns error with strings" time="0.001">
    </testcase>
    <testcase classname=" parameterValitor returns error with object" name=" parameterValitor returns error with object" time="0">
    </testcase>
    <testcase classname=" parameterValitor returns error with numerical keys" name=" parameterValitor returns error with numerical keys" time="0">
    </testcase>
  </testsuite>
  <testsuite name="plugins loaded" errors="0" failures="0" skipped="0" timestamp="2023-02-10T06:45:18" time="0.232" tests="1">
    <testcase classname="plugins loaded check plugins loaded" name="plugins loaded check plugins loaded" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="UnholdParticipant Action" errors="0" failures="0" skipped="0" timestamp="2023-02-10T06:45:18" time="0.624" tests="4">
    <testcase classname="UnholdParticipant Action adds beforeUnholdParticipant listener" name="UnholdParticipant Action adds beforeUnholdParticipant listener" time="0.003">
    </testcase>
    <testcase classname="UnholdParticipant Action should not call InternalCallService.unholdParticipant as it is not an internal call" name="UnholdParticipant Action should not call InternalCallService.unholdParticipant as it is not an internal call" time="0.001">
    </testcase>
    <testcase classname="UnholdParticipant Action should call InternalCallService.unholdParticipant with correct parameters" name="UnholdParticipant Action should call InternalCallService.unholdParticipant with correct parameters" time="0.001">
    </testcase>
    <testcase classname="UnholdParticipant Action should not call InternalCallService.unholdParticipant with incorrect participantType" name="UnholdParticipant Action should not call InternalCallService.unholdParticipant with incorrect participantType" time="0">
    </testcase>
  </testsuite>
  <testsuite name="Retry Handler" errors="0" failures="0" skipped="0" timestamp="2023-02-10T06:45:18" time="0.364" tests="3">
    <testcase classname="Retry Handler throws invalid parameter error" name="Retry Handler throws invalid parameter error" time="0.001">
    </testcase>
    <testcase classname="Retry Handler returns failed status" name="Retry Handler returns failed status" time="0.003">
    </testcase>
    <testcase classname="Retry Handler retry callback is called" name="Retry Handler retry callback is called" time="0.002">
    </testcase>
  </testsuite>
  <testsuite name="CallCanvas" errors="0" failures="0" skipped="0" timestamp="2023-02-10T06:45:17" time="2.252" tests="1">
    <testcase classname="CallCanvas adds InternalDialpad to call canvas" name="CallCanvas adds InternalDialpad to call canvas" time="0.001">
    </testcase>
  </testsuite>
</testsuites>